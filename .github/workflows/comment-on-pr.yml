name: PR Review Comment

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  add-review-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install @actions/github @actions/core

      - name: Add review comment to PR
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          node -e '
            const github = require("@actions/github");
            const core = require("@actions/core");
            const token = process.env.GITHUB_TOKEN;
            const octokit = github.getOctokit(token);
            const context = github.context;

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pull_number = context.payload.pull_request.number;
            const body = "This is an automated review comment.";
            const path = "newfile.py";  // Change to the actual file path
            const targetLine = 10;  // Change to the line number where you want to comment

            async function run() {
              try {
                const { data: files } = await octokit.rest.pulls.listFiles({
                  owner,
                  repo,
                  pull_number
                });

                console.log("Files in the PR:", files);

                const file = files.find(f => f.filename === path);
                if (!file) {
                  throw new Error("File not found in pull request");
                }

                console.log("Found file in PR:", file);

                let position = null;
                let originalLineNumber = 0;
                let newLineNumber = 0;

                console.log("Processing diff for file:", path);
                for (const line of file.patch.split("\\n")) {
                  console.log("Current line:", line);
                  if (line.startsWith("@@")) {
                    const match = /@@ -(\d+),\d+ \+(\d+),\d+ @@/.exec(line);
                    if (match) {
                      originalLineNumber = parseInt(match[1], 10) - 1;
                      newLineNumber = parseInt(match[2], 10) - 1;
                      console.log("New hunk starts, original line number set to:", originalLineNumber, "new line number set to:", newLineNumber);
                    }
                  } else {
                    if (line.startsWith(" ")) {
                      originalLineNumber++;
                      newLineNumber++;
                    } else if (line.startsWith("-")) {
                      originalLineNumber++;
                    } else if (line.startsWith("+")) {
                      newLineNumber++;
                      if (originalLineNumber + 1 === targetLine) {
                        position = newLineNumber;
                        console.log("Found target line, position set to:", position);
                        break;
                      }
                    }
                  }
                }

                if (position === null) {
                  console.error("Debug Info: Final values - originalLineNumber:", originalLineNumber, "newLineNumber:", newLineNumber, "targetLine:", targetLine);
                  throw new Error("Position not found in diff");
                }

                console.log("Final position for comment:", position);

                await octokit.rest.pulls.createReview({
                  owner,
                  repo,
                  pull_number,
                  event: "COMMENT",
                  body: "Automated review comment",
                  comments: [
                    {
                      path,
                      line: position,
                      side: "RIGHT",
                      body
                    }
                  ]
                });
                console.log("Review comment added successfully");
              } catch (error) {
                console.error("Error adding review comment", error);
                core.setFailed(error.message);
              }
            }

            run();
          '
